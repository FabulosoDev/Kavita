name: Build and Test workflow

on:
  push:
    branches: '**'
  pull_request:
    branches: [ main, develop ]
    types: [opened, reopened]

jobs:
  build:
    name: Build .Net
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
            dotnet-version: 6.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

  test:
    name: Install Sonar & Test
    needs: build
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
            fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
            dotnet-version: 6.0.x

      - name: Install dependencies
        run: dotnet restore

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Sonar Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"Kareadita_Kavita" /o:"kareadita" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Test
        run: dotnet test --no-restore --verbosity normal
